// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: proto/workflow.proto

package nebula

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkflowDefinition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	YamlFile      []byte                 `protobuf:"bytes,2,opt,name=yaml_file,json=yamlFile,proto3" json:"yaml_file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowDefinition) Reset() {
	*x = WorkflowDefinition{}
	mi := &file_proto_workflow_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowDefinition) ProtoMessage() {}

func (x *WorkflowDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workflow_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowDefinition.ProtoReflect.Descriptor instead.
func (*WorkflowDefinition) Descriptor() ([]byte, []int) {
	return file_proto_workflow_proto_rawDescGZIP(), []int{0}
}

func (x *WorkflowDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkflowDefinition) GetYamlFile() []byte {
	if x != nil {
		return x.YamlFile
	}
	return nil
}

type WorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowResponse) Reset() {
	*x = WorkflowResponse{}
	mi := &file_proto_workflow_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowResponse) ProtoMessage() {}

func (x *WorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workflow_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowResponse.ProtoReflect.Descriptor instead.
func (*WorkflowResponse) Descriptor() ([]byte, []int) {
	return file_proto_workflow_proto_rawDescGZIP(), []int{1}
}

func (x *WorkflowResponse) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *WorkflowResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_proto_workflow_proto protoreflect.FileDescriptor

const file_proto_workflow_proto_rawDesc = "" +
	"\n" +
	"\x14proto/workflow.proto\x12\x06nebula\"E\n" +
	"\x12WorkflowDefinition\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1b\n" +
	"\tyaml_file\x18\x02 \x01(\fR\byamlFile\"K\n" +
	"\x10WorkflowResponse\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status2Y\n" +
	"\x0fWorkflowService\x12F\n" +
	"\x0eSubmitWorkflow\x12\x1a.nebula.WorkflowDefinition\x1a\x18.nebula.WorkflowResponseB;Z9github.com/<yourusername>/nebula-v2025.10.07/proto;nebulab\x06proto3"

var (
	file_proto_workflow_proto_rawDescOnce sync.Once
	file_proto_workflow_proto_rawDescData []byte
)

func file_proto_workflow_proto_rawDescGZIP() []byte {
	file_proto_workflow_proto_rawDescOnce.Do(func() {
		file_proto_workflow_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_workflow_proto_rawDesc), len(file_proto_workflow_proto_rawDesc)))
	})
	return file_proto_workflow_proto_rawDescData
}

var file_proto_workflow_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_workflow_proto_goTypes = []any{
	(*WorkflowDefinition)(nil), // 0: nebula.WorkflowDefinition
	(*WorkflowResponse)(nil),   // 1: nebula.WorkflowResponse
}
var file_proto_workflow_proto_depIdxs = []int32{
	0, // 0: nebula.WorkflowService.SubmitWorkflow:input_type -> nebula.WorkflowDefinition
	1, // 1: nebula.WorkflowService.SubmitWorkflow:output_type -> nebula.WorkflowResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_workflow_proto_init() }
func file_proto_workflow_proto_init() {
	if File_proto_workflow_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_workflow_proto_rawDesc), len(file_proto_workflow_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_workflow_proto_goTypes,
		DependencyIndexes: file_proto_workflow_proto_depIdxs,
		MessageInfos:      file_proto_workflow_proto_msgTypes,
	}.Build()
	File_proto_workflow_proto = out.File
	file_proto_workflow_proto_goTypes = nil
	file_proto_workflow_proto_depIdxs = nil
}
